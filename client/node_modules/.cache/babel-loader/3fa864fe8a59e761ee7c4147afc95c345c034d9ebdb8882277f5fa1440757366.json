{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIVA CHAITANYA\\\\Desktop\\\\New Builds\\\\BlogProject\\\\client\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nfunction RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert('Registration successful');\n    } else {\n      alert('Registration failed.Try again later!!');\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    value: username,\n    onChange: ev => setUsername(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: ev => setPassword(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Register\"));\n}\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","RegisterPage","_s","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","createElement","className","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/SHIVA CHAITANYA/Desktop/New Builds/BlogProject/client/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction RegisterPage() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    async function register(ev) {\r\n        ev.preventDefault();\r\n\r\n        const response = await fetch('http://localhost:4000/register', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password }),\r\n            headers: { 'Content-Type': 'application/json' },\r\n\r\n        });\r\n        if (response.status === 200) {\r\n            alert('Registration successful')\r\n        } else {\r\n            alert('Registration failed.Try again later!!')\r\n\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <form className='register' onSubmit={register}>\r\n            <h1>Register</h1>\r\n            <input type='text' placeholder='username'\r\n                value={username}\r\n                onChange={ev => setUsername(ev.target.value)} />\r\n            <input type='password' placeholder='password'\r\n                value={password}\r\n                onChange={ev => setPassword(ev.target.value)} />\r\n            <button>Register</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,eAAeO,QAAQA,CAACC,EAAE,EAAE;IACxBA,EAAE,CAACC,cAAc,CAAC,CAAC;IAEnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5CW,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAElD,CAAC,CAAC;IACF,IAAIN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MACzBC,KAAK,CAAC,yBAAyB,CAAC;IACpC,CAAC,MAAM;MACHA,KAAK,CAAC,uCAAuC,CAAC;IAElD;EAGJ;EACA,oBACInB,KAAA,CAAAoB,aAAA;IAAMC,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEd,QAAS;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1C5B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjB5B,KAAA,CAAAoB,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,UAAU;IACrCC,KAAK,EAAE3B,QAAS;IAChB4B,QAAQ,EAAEvB,EAAE,IAAIJ,WAAW,CAACI,EAAE,CAACwB,MAAM,CAACF,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpD5B,KAAA,CAAAoB,aAAA;IAAOS,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;IACzCC,KAAK,EAAEzB,QAAS;IAChB0B,QAAQ,EAAEvB,EAAE,IAAIF,WAAW,CAACE,EAAE,CAACwB,MAAM,CAACF,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpD5B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CACtB,CAAC;AAEf;AAACzB,EAAA,CAjCQD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAmCrB,eAAeA,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}